-- Criando a tabela de clientes
CREATE TABLE CLIENTES (
    ID_CLIENTE NUMBER PRIMARY KEY,
    NOME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE
);

-- Criando a tabela de pedidos
CREATE TABLE PEDIDOS (
    ID_PEDIDO NUMBER PRIMARY KEY,
    ID_CLIENTE NUMBER,
    DATA_PEDIDO DATE DEFAULT SYSDATE,
    TOTAL NUMBER(10,2),
    STATUS VARCHAR2(20) DEFAULT 'PENDENTE',
    CONSTRAINT FK_PEDIDO_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE)
);

-- Criando uma procedure para inserir pedidos
CREATE OR REPLACE PROCEDURE INSERIR_PEDIDO(
    p_id_pedido NUMBER,
    p_id_cliente NUMBER,
    p_total NUMBER
) AS
BEGIN
    INSERT INTO PEDIDOS (ID_PEDIDO, ID_CLIENTE, TOTAL)
    VALUES (p_id_pedido, p_id_cliente, p_total);
    COMMIT;
END;
/

-- Criando uma trigger para atualizar status do pedido
CREATE OR REPLACE TRIGGER TRG_ATUALIZAR_STATUS
BEFORE UPDATE ON PEDIDOS
FOR EACH ROW
BEGIN
    IF :NEW.TOTAL > 1000 THEN
        :NEW.STATUS := 'APROVADO';
    ELSE
        :NEW.STATUS := 'PENDENTE';
    END IF;
END;
/

-- Criando uma view para listar pedidos aprovados
CREATE OR REPLACE VIEW VW_PEDIDOS_APROVADOS AS
SELECT * FROM PEDIDOS WHERE STATUS = 'APROVADO';
